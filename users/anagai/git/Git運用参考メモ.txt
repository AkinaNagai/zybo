Git運用に関する参考メモ

運用は、リポジトリ/ブランチに関する運用と、Gitコマンド操作に関する運用が
ルール化されています。各メンバーは、基本的に運用ルールにしたがって作業しております。
資料の持ち出しは不可ですので、概要的な内容ですが、抜粋して以下テキストにしました。
ご参考になれば幸いです。


■ Gitリポジトリ運用について
　
● 概要
　・各チーム(設計・検証・評価など）毎にブランチ作成
　・ブランチ間データの受け渡し時は、必ずタグ(特定のコミットを分かりやすい名称にしたもの）使用
　・運用に際して以下を規定。

① リポジトリ
　・リモートリポジトリ場所（リモートリポジトリ場所のパスを記載）
　・管理者（管理責任者、基本リーダー）
　・リポジトリ名（製品毎のリポジトリ名）
② ブランチ
　・ブランチ種別（マスターと設計、検証、評価などチーム毎に）
　・ブランチ名（ブランチ毎のブランチ名、ユニークな名称）
　・オーナー（ブランチ毎のオーナーの定義、操作権限のある人）
　・用途（ブランチ毎の用途・概要）
③ タグ
　・タグ種類（PJ開始、RTLリリース、FWリリース、DUT集約、検証、設計完了、PJ完了などフェーズ毎）
　・タグ名（タグ毎のタグ名、「ユニークな名称＋通し番号」）
　・打つ人（タグ毎のタグを打つ人）
　・打つタイミング（タグ毎のタグを打つタイミング、プロジェクト開始時、集約時、検証完了時などのフェーズ）
④ 運用フロー（本来以下は図）
　・横軸に各フェーズ（プロジェクト開始～設計～検証環境構築～検証～設計完了～評価～評価完了など）
　・縦軸に各種ブランチ
　・フェーズとブランチの合わさる箇所に打たれるタグを記載
　・各ブランチ間でどのタグをどのフェーズで取り込む（マージする）かを矢印で記載


■ Gitコマンド運用ついて

● 概要
・予期しない動作を起こすコマンドや危険なコマンドがあるため
　コマンドの運用方法などを以下定義

①使用禁止コマンド（リーダーの許可が必要）
　・git init
　・git remote
　・git revert
　・git rebase
　・git cherry-pick
→ リモート操作系は基本禁止
②特定オプション禁止コマンド（リーダーの許可が必要）
　・git branch <new branch>
　・git branch -d <branch名>
　・git branch -m <branch名> <新branch名>
　・git checkout -b <branch名> <任意のHASH(or TAG名)> 
　・git commit <filename>　（直前にgit add を行っていない場合）
→ ブランチ作成は基本禁止、addを伴はないcommitもGit推奨手順でない為禁止
③推奨コマンド
　・git clone
　・git branch
　・git checkout
　・git add
　・git rm
　・git commit
　・git reset
　・git stash
　・git fetch
　・git merge
　・git pull
　・git push
　・git diff
　・git show
　・git log
④実使用例
　・ローカル環境を作成する
　・リモートブランチ情報を取得する
　・ブランチを移動する
　・ローカル環境を更新する
　・新規ファイル作成・更新・削除の登録
　・TAG情報の取得・登録・削除
　・現在のブランチの内容を他のブランチにマージする
　・作業の一時退避
→ 上記について、実際のコマンド事例を記載
⑤ミスをしてしまった時の対応
　・リモート環境の情報を修正したい
　・ローカル環境の情報を修正したい
→ 上記について、どういう対応をするかを記載（まず誰に連絡、その後どうするなど）


以上


